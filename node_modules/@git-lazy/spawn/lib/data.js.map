{"version":3,"file":"data.js","sourceRoot":"","sources":["data.ts"],"names":[],"mappings":";AAAA;;GAEG;;;AAEH,oDAAgD;AAGvC,yFAHA,oBAAQ,OAGA;AAFjB,2DAAkD;AAIlD,SAAgB,sBAAsB,CAAC,MAAc,EAAE,MAAiC;IAEvF,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAE5B,OAAO,IAAA,oBAAQ,EAAC,IAAA,iCAAY,EAAC,MAAM;SACjC,KAAK,CAAC,SAAS,CAAC;SAChB,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;SAC1B,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CACtB;AACH,CAAC;AATD,wDASC;AAED,SAAgB,YAAY,CAAC,CAAS;IAErC,OAAO,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE,CAAA;AAC9C,CAAC;AAHD,oCAGC;AAED,kBAAe,sBAAsB,CAAA","sourcesContent":["/**\n * Created by user on 2019/6/13.\n */\n\nimport { sortTree } from '@lazy-glob/sort-tree';\nimport { array_unique } from 'array-hyper-unique';\n\nexport { sortTree }\n\nexport function handleSpawnOutputArray(output: string, trimFn?: (text: string) => string): string[]\n{\n\ttrimFn = trimFn || (s => s);\n\n\treturn sortTree(array_unique(output\n\t\t.split(/[\\n\\r]+/)\n\t\t.map(s => trimFn(s).trim())\n\t\t.filter(_filterEmpty)))\n\t\t;\n}\n\nexport function _filterEmpty(v: string): boolean\n{\n\treturn v !== void 0 && v !== null && v !== ''\n}\n\nexport default handleSpawnOutputArray\n"]}