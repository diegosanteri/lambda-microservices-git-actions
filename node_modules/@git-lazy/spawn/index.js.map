{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";AAAA;;GAEG;;;;AAUH,2CAA+D;AAC/D,yDAAqF;AAErF,mEAA8E;AAC9E,qDAAyD;AAKhD,iGALA,4BAAgB,OAKA;AAJzB,uDAAwD;AAExD,sDAA4B;AAI5B,MAAM,aAAa,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAEhC,sCAAa;AAEtB;;GAEG;AACH,SAAgB,iBAAiB,CAA4B,OAAe,EAC3E,IAAqB,EACrB,OAA8B;IAG9B,IAAI,KAAc,CAAC;IAEnB,IAAI,OAAO,EACX;QACC,IAAI,OAAO,CAAC,KAAK,IAAI,SAAS,EAC9B;YACC,KAAK,GAAG,IAAI,CAAC;YACb,OAAO,OAAO,CAAC,KAAK,CAAA;SACpB;KACD;IAED,aAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAElC,IAAI,EAAE,GAAG,IAAA,wBAAc,EAAI,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAEnD,EAAE,CAAC,aAAa,CAAC,GAAG;QACnB,OAAO;QACP,IAAI;QACJ,OAAO;KACP,CAAC;IAEF,aAAa;IACb,KAAK,IAAI,eAAO,CAAC,GAAG,CAAC,IAAA,4BAAgB,EAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAElD,cAAc,CAAC,EAAE,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,WAAW,CAAC,CAAC;IAE9D,OAAO,EAAE,CAAC;AACX,CAAC;AAhCD,8CAgCC;AAqF6B,iCAAI;AAnFlC;;GAEG;AACH,SAAgB,kBAAkB,CAA4B,OAAe,EAC5E,IAAqB,EACrB,OAA+B;IAG/B,aAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAElC,OAAO,IAAA,2CAAc,EAAC,IAAA,yBAAe,EAAI,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC;SAC9D,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;QAEjF,EAAE,CAAC,aAAa,CAAC,GAAG;YACnB,OAAO;YACP,IAAI;YACJ,OAAO;SACP,CAAA;IACF,CAAC,CAAC,CAAC;AACJ,CAAC;AAhBD,gDAgBC;AAiE8B,mCAAK;AA/DpC;;;;;GAKG;AACH,SAAgB,cAAc,CAAmF,EAAK,EACrH,UAAoB,EACpB,WAAqB;IAGrB,IAAI,EAAU,CAAC;IACf,UAAU,GAAG,UAAU,aAAV,UAAU,cAAV,UAAU,GAAI,IAAI,CAAC;IAEhC,IAAI,EAAE,CAAC,KAAK,EACZ;QACC,aAAa;QACb,EAAE,CAAC,eAAe,GAAG,EAAE,CAAC,eAAe,IAAI,EAAE,CAAC,KAAK,CAAC;KACpD;SACI,IAAI,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,EACtC;QACC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAEvB,IAAI,CAAC,EAAE,CAAC,KAAK,EACb;YACC,IAAI,EAAE,GAAG,IAAA,2BAAc,EAAC,EAAE,CAAC,CAAC;YAE5B,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,EACzD;gBACC,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,EAAE,CAAqB,CAAC;gBAE1C,aAAa;gBACb,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;gBAEb,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC;gBACzB,aAAa;gBACb,EAAE,CAAC,eAAe,GAAG,EAAE,CAAC,eAAe,IAAI,CAAC,CAAC;aAC7C;SACD;KACD;IAED,aAAa;IACb,IAAI,CAAC,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,QAAQ,EAC5B;QACC,aAAa;QACb,EAAE,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,mCAAmC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAA;KACtE;IAED,IAAI,UAAU,IAAI,EAAE,CAAC,KAAK,EAC1B;QACC,MAAM,EAAE,CAAC,KAAK,CAAA;KACd;IAED,IAAI,WAAW,IAAI,EAAE,IAAI,IAAI,EAC7B;QACC,oBAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/B,oBAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACtB;IAED,OAAO,EAAE,CAAC;AACX,CAAC;AAtDD,wCAsDC;AAKD,kBAAkB,CAAC,KAAK,GAAG,kBAAkB,CAAC;AAC9C,kBAAkB,CAAC,IAAI,GAAG,iBAAiB,CAAC;AAE5C,kBAAkB,CAAC,OAAO,GAAG,kBAAkB,CAAC;AAEhD,kBAAe,kBAAkB,CAAA","sourcesContent":["/**\n * Created by user on 2020/5/27.\n */\n\nimport { SpawnSyncOptions, SpawnOptions } from 'cross-spawn-extra/type';\nimport {\n\tSpawnASyncReturns,\n\tSpawnASyncReturnsPromise,\n\tISpawnASyncError,\n\tSpawnSyncReturns,\n\tCrossSpawnExtra,\n} from 'cross-spawn-extra/core';\nimport { console, debugConsole, debug } from '@git-lazy/debug';\nimport { sync as CrossSpawnSync, async as CrossSpawnASync } from 'cross-spawn-extra';\nimport { ISpawnGitSyncOptions, ISpawnGitAsyncOptions } from './lib/types';\nimport { promiseTapLazyBoth as promiseTapLazy } from 'promise-tap-then-catch';\nimport { crossSpawnOutput } from '@lazy-spawn/stringify';\nimport { stripAnsiValue } from '@lazy-spawn/strip-ansi';\n\nexport * from './lib/types';\n\nexport { crossSpawnOutput }\n\nconst SymbolRawArgv = Symbol.for('argv');\n\nexport { SymbolRawArgv }\n\n/**\n * 適用於 git 的 crossSpawnSync\n */\nexport function crossSpawnGitSync<T extends string | Buffer>(command: string,\n\targs?: Array<unknown>,\n\toptions?: ISpawnGitSyncOptions,\n): SpawnSyncReturns<T>\n{\n\tlet print: boolean;\n\n\tif (options)\n\t{\n\t\tif (options.stdio == 'inherit')\n\t\t{\n\t\t\tprint = true;\n\t\t\tdelete options.stdio\n\t\t}\n\t}\n\n\tdebug.log(command, args, options);\n\n\tlet cp = CrossSpawnSync<T>(command, args, options);\n\n\tcp[SymbolRawArgv] = {\n\t\tcommand,\n\t\targs,\n\t\toptions,\n\t};\n\n\t// @ts-ignore\n\tprint && console.log(crossSpawnOutput(cp.output));\n\n\tcheckGitOutput(cp, options?.throwError, options?.printStderr);\n\n\treturn cp;\n}\n\n/**\n * 適用於 git 的 crossSpawnAsync\n */\nexport function crossSpawnGitAsync<T extends string | Buffer>(command: string,\n\targs?: Array<unknown>,\n\toptions?: ISpawnGitAsyncOptions,\n): SpawnASyncReturnsPromise<T>\n{\n\tdebug.log(command, args, options);\n\n\treturn promiseTapLazy(CrossSpawnASync<T>(command, args, options)\n\t\t.then(cp => checkGitOutput(cp, options?.throwError, options?.printStderr)), cp =>\n\t{\n\t\tcp[SymbolRawArgv] = {\n\t\t\tcommand,\n\t\t\targs,\n\t\t\toptions,\n\t\t}\n\t});\n}\n\n/**\n * 檢查 git 輸出訊息來判斷指令是否成功或錯誤\n *\n * because git output log has bug\n * when error happen didn't trigger cp.error\n */\nexport function checkGitOutput<T extends SpawnSyncReturns<string | Buffer> | SpawnASyncReturns<string | Buffer>>(cp: T,\n\tthrowError?: boolean,\n\tprintStderr?: boolean,\n)\n{\n\tlet s1: string;\n\tthrowError = throwError ?? true;\n\n\tif (cp.error)\n\t{\n\t\t// @ts-ignore\n\t\tcp.errorCrossSpawn = cp.errorCrossSpawn || cp.error;\n\t}\n\telse if (cp.stderr && cp.stderr.length)\n\t{\n\t\ts1 = String(cp.stderr);\n\n\t\tif (!cp.error)\n\t\t{\n\t\t\tlet s2 = stripAnsiValue(s1);\n\n\t\t\tif (/^fatal\\:/im.test(s2) || /^unknown option:/i.test(s2))\n\t\t\t{\n\t\t\t\tlet e = new Error(s1) as ISpawnASyncError;\n\n\t\t\t\t// @ts-ignore\n\t\t\t\te.child = cp;\n\n\t\t\t\tcp.error = cp.error || e;\n\t\t\t\t// @ts-ignore\n\t\t\t\tcp.errorCrossSpawn = cp.errorCrossSpawn || e;\n\t\t\t}\n\t\t}\n\t}\n\n\t// @ts-ignore\n\tif (!cp.error && cp.exitCode)\n\t{\n\t\t// @ts-ignore\n\t\tcp.error = new Error(`Process finished with exit code ${cp.exitCode}`)\n\t}\n\n\tif (throwError && cp.error)\n\t{\n\t\tthrow cp.error\n\t}\n\n\tif (printStderr && s1 != null)\n\t{\n\t\tdebugConsole.info(`cp.stderr`);\n\t\tdebugConsole.warn(s1);\n\t}\n\n\treturn cp;\n}\n\nexport { crossSpawnGitSync as sync };\nexport { crossSpawnGitAsync as async };\n\ncrossSpawnGitAsync.async = crossSpawnGitAsync;\ncrossSpawnGitAsync.sync = crossSpawnGitSync;\n\ncrossSpawnGitAsync.default = crossSpawnGitAsync;\n\nexport default crossSpawnGitAsync\n"]}