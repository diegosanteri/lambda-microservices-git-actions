{"version":3,"file":"index.esm.mjs","sources":["../src/index.ts"],"sourcesContent":["/**\n * Created by user on 2020/6/4.\n */\n\n// @ts-ignore\nimport _naturalCompare from 'string-natural-compare';\n\nexport interface IOptionsStringNaturalCompare\n{\n\t/**\n\t * Set to true to compare strings case-insensitively. Default: false.\n\t */\n\tcaseInsensitive?: boolean,\n\t/**\n\t * A string of characters that define a custom character ordering. Default: undefined.\n\t */\n\talphabet?: string,\n}\n\nexport interface IOptionsNaturalCompare extends IOptionsStringNaturalCompare\n{\n\tdesc?: boolean,\n}\n\n/**\n * Compare alphanumeric strings the same way a human would,\n * using a natural order algorithm\n * (originally known as the alphanum algorithm)\n * where numeric characters are sorted\n * based on their numeric values rather than their ASCII values.\n */\nexport function naturalCompare(a: string | number, b: string | number, opts?: IOptionsNaturalCompare)\n{\n\tlet i: number;\n\n\tif (typeof a === 'number' && typeof b === 'number')\n\t{\n\t\ti = a - b\n\t}\n\telse\n\t{\n\t\tif (typeof a === 'number')\n\t\t{\n\t\t\ta = String(a);\n\t\t}\n\t\telse if (typeof b === 'number')\n\t\t{\n\t\t\tb = String(b);\n\t\t}\n\n\t\tif (a === b)\n\t\t{\n\t\t\treturn 0\n\t\t}\n\n\t\ti = _naturalCompare(a, b, opts)\n\t}\n\n\tif (i !== 0 && opts?.desc)\n\t{\n\t\ti = 0 - i;\n\t}\n\n\treturn i\n}\n\n/**\n * create compare with preset options\n */\nexport function createNew(opts?: IOptionsNaturalCompare)\n{\n\treturn (a: string | number, b: string | number) => naturalCompare(a, b, opts)\n}\n\n/**\n * compare strings case-insensitively\n */\nexport const compareCaseInsensitive = createNew({\n\tcaseInsensitive: true,\n})\n\nexport { compareCaseInsensitive as caseInsensitive }\n\nnaturalCompare.createNew = createNew;\nnaturalCompare.compareCaseInsensitive = compareCaseInsensitive;\nnaturalCompare.caseInsensitive = compareCaseInsensitive;\nnaturalCompare.default = naturalCompare;\n\nObject.defineProperty(naturalCompare, \"__esModule\", { value: true });\n\nexport default naturalCompare\n"],"names":["naturalCompare","a","b","opts","i","String","_naturalCompare","desc","createNew","compareCaseInsensitive","caseInsensitive","default","Object","defineProperty","value"],"mappings":";;SA+BgBA,eAAeC,GAAoBC,GAAoBC;EAEtE,IAAIC;EAEJ,IAAiB,mBAANH,KAA+B,mBAANC,GAEnCE,IAAIH,IAAIC,QAGT;IAUC,IATiB,mBAAND,IAEVA,IAAII,OAAOJ,KAEU,mBAANC,MAEfA,IAAIG,OAAOH;IAGRD,MAAMC,GAET,OAAO;IAGRE,IAAIE,EAAgBL,GAAGC,GAAGC;;EAQ3B,OALU,MAANC,KAAAA,QAAWD,KAAAA,EAAMI,SAEpBH,IAAI,IAAIA,IAGFA;;;AAMF,SAAUI,UAAUL;EAEzB,OAAO,CAACF,GAAoBC,MAAuBF,eAAeC,GAAGC,GAAGC;;;AAM5DM,MAAAA,IAAyBD,UAAU;EAC/CE,kBAAiB;;;AAKlBV,eAAeQ,YAAYA,WAC3BR,eAAeS,yBAAyBA;AACxCT,eAAeU,kBAAkBD,GACjCT,eAAeW,UAAUX,gBAEzBY,OAAOC,eAAeb,gBAAgB,cAAc;EAAEc,QAAO;;;"}