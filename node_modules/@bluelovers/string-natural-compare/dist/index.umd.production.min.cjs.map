{"version":3,"file":"index.umd.production.min.cjs","sources":["../src/index.ts"],"sourcesContent":["/**\n * Created by user on 2020/6/4.\n */\n\n// @ts-ignore\nimport _naturalCompare from 'string-natural-compare';\n\nexport interface IOptionsStringNaturalCompare\n{\n\t/**\n\t * Set to true to compare strings case-insensitively. Default: false.\n\t */\n\tcaseInsensitive?: boolean,\n\t/**\n\t * A string of characters that define a custom character ordering. Default: undefined.\n\t */\n\talphabet?: string,\n}\n\nexport interface IOptionsNaturalCompare extends IOptionsStringNaturalCompare\n{\n\tdesc?: boolean,\n}\n\n/**\n * Compare alphanumeric strings the same way a human would,\n * using a natural order algorithm\n * (originally known as the alphanum algorithm)\n * where numeric characters are sorted\n * based on their numeric values rather than their ASCII values.\n */\nexport function naturalCompare(a: string | number, b: string | number, opts?: IOptionsNaturalCompare)\n{\n\tlet i: number;\n\n\tif (typeof a === 'number' && typeof b === 'number')\n\t{\n\t\ti = a - b\n\t}\n\telse\n\t{\n\t\tif (typeof a === 'number')\n\t\t{\n\t\t\ta = String(a);\n\t\t}\n\t\telse if (typeof b === 'number')\n\t\t{\n\t\t\tb = String(b);\n\t\t}\n\n\t\tif (a === b)\n\t\t{\n\t\t\treturn 0\n\t\t}\n\n\t\ti = _naturalCompare(a, b, opts)\n\t}\n\n\tif (i !== 0 && opts?.desc)\n\t{\n\t\ti = 0 - i;\n\t}\n\n\treturn i\n}\n\n/**\n * create compare with preset options\n */\nexport function createNew(opts?: IOptionsNaturalCompare)\n{\n\treturn (a: string | number, b: string | number) => naturalCompare(a, b, opts)\n}\n\n/**\n * compare strings case-insensitively\n */\nexport const compareCaseInsensitive = createNew({\n\tcaseInsensitive: true,\n})\n\nexport { compareCaseInsensitive as caseInsensitive }\n\nnaturalCompare.createNew = createNew;\nnaturalCompare.compareCaseInsensitive = compareCaseInsensitive;\nnaturalCompare.caseInsensitive = compareCaseInsensitive;\nnaturalCompare.default = naturalCompare;\n\nObject.defineProperty(naturalCompare, \"__esModule\", { value: true });\n\nexport default naturalCompare\n"],"names":["naturalCompare","a","b","opts","i","String","_naturalCompare","desc","createNew","compareCaseInsensitive","caseInsensitive","default","Object","defineProperty","value"],"mappings":"gcA+BgBA,eAAeC,EAAoBC,EAAoBC,GAEtE,IAAIC,EAEJ,GAAiB,iBAANH,GAA+B,iBAANC,EAEnCE,EAAIH,EAAIC,MAGT,CAUC,GATiB,iBAAND,EAEVA,EAAII,OAAOJ,GAEU,iBAANC,IAEfA,EAAIG,OAAOH,IAGRD,IAAMC,EAET,OAAO,EAGRE,EAAIE,EAAAA,QAAgBL,EAAGC,EAAGC,GAQ3B,OALU,IAANC,GAAAA,MAAWD,GAAAA,EAAMI,OAEpBH,EAAI,EAAIA,GAGFA,EAMF,SAAUI,UAAUL,GAEzB,MAAO,CAACF,EAAoBC,IAAuBF,eAAeC,EAAGC,EAAGC,GAM5DM,MAAAA,EAAyBD,UAAU,CAC/CE,iBAAiB,IAKlBV,eAAeQ,UAAYA,UAC3BR,eAAeS,uBAAyBA,EACxCT,eAAeU,gBAAkBD,EACjCT,eAAeW,QAAUX,eAEzBY,OAAOC,eAAeb,eAAgB,aAAc,CAAEc,OAAO"}