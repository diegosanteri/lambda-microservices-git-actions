{"version":3,"file":"index.cjs.production.min.cjs","sources":["../src/index.ts"],"sourcesContent":["export const HIGH_SURROGATE_START = 0xd800\nexport const HIGH_SURROGATE_END = 0xdbff\n\nexport const LOW_SURROGATE_START = 0xdc00\n\nexport const REGIONAL_INDICATOR_START = 0x1f1e6\nexport const REGIONAL_INDICATOR_END = 0x1f1ff\n\nexport const FITZPATRICK_MODIFIER_START = 0x1f3fb\nexport const FITZPATRICK_MODIFIER_END = 0x1f3ff\n\nexport const VARIATION_MODIFIER_START = 0xfe00\nexport const VARIATION_MODIFIER_END = 0xfe0f\n\nexport const DIACRITICAL_MARKS_START = 0x20d0\nexport const DIACRITICAL_MARKS_END = 0x20ff\n\nexport const ZWJ = 0x200d\n\nexport const GRAPHEMS = Object.freeze([\n\t0x0308, // ( ◌̈ ) COMBINING DIAERESIS\n\t0x0937, // ( ष ) DEVANAGARI LETTER SSA\n\t0x0937, // ( ष ) DEVANAGARI LETTER SSA\n\t0x093F, // ( ि ) DEVANAGARI VOWEL SIGN I\n\t0x093F, // ( ि ) DEVANAGARI VOWEL SIGN I\n\t0x0BA8, // ( ந ) TAMIL LETTER NA\n\t0x0BBF, // ( ி ) TAMIL VOWEL SIGN I\n\t0x0BCD, // ( ◌்) TAMIL SIGN VIRAMA\n\t0x0E31, // ( ◌ั ) THAI CHARACTER MAI HAN-AKAT\n\t0x0E33, // ( ำ ) THAI CHARACTER SARA AM\n\t0x0E40, // ( เ ) THAI CHARACTER SARA E\n\t0x0E49, // ( เ ) THAI CHARACTER MAI THO\n\t0x1100, // ( ᄀ ) HANGUL CHOSEONG KIYEOK\n\t0x1161, // ( ᅡ ) HANGUL JUNGSEONG A\n\t0x11A8, // ( ᆨ ) HANGUL JONGSEONG KIYEOK\n]);\n\nfunction _runes(string: string): string[]\n{\n\tif (typeof string !== 'string')\n\t{\n\t\tthrow new TypeError('string cannot be undefined or null')\n\t}\n\tconst result = []\n\tlet i = 0\n\tlet increment = 0\n\twhile (i < string.length)\n\t{\n\t\tincrement += nextUnits(i + increment, string)\n\t\tif (isGraphem(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t}\n\t\tif (isVariationSelector(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t}\n\t\tif (isDiacriticalMark(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t}\n\t\tif (isZeroWidthJoiner(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t\tcontinue\n\t\t}\n\t\tresult.push(string.substring(i, i + increment))\n\t\ti += increment\n\t\tincrement = 0\n\t}\n\treturn result\n}\n\n// Decide how many code units make up the current character.\n// BMP characters: 1 code unit\n// Non-BMP characters (represented by surrogate pairs): 2 code units\n// Emoji with skin-tone modifiers: 4 code units (2 code points)\n// Country flags: 4 code units (2 code points)\n// Variations: 2 code units\nexport function nextUnits(i: number, string: string): 1 | 2 | 4\n{\n\tconst current = string[i]\n\t// If we don't have a value that is part of a surrogate pair, or we're at\n\t// the end, only take the value at i\n\tif (!isFirstOfSurrogatePair(current) || i === string.length - 1)\n\t{\n\t\treturn 1\n\t}\n\n\tconst currentPair = current + string[i + 1]\n\tlet nextPair = string.substring(i + 2, i + 5)\n\n\t// Country flags are comprised of two regional indicator symbols,\n\t// each represented by a surrogate pair.\n\t// See http://emojipedia.org/flags/\n\t// If both pairs are regional indicator symbols, take 4\n\tif (isRegionalIndicator(currentPair) && isRegionalIndicator(nextPair))\n\t{\n\t\treturn 4\n\t}\n\n\t// If the next pair make a Fitzpatrick skin tone\n\t// modifier, take 4\n\t// See http://emojipedia.org/modifiers/\n\t// Technically, only some code points are meant to be\n\t// combined with the skin tone modifiers. This function\n\t// does not check the current pair to see if it is\n\t// one of them.\n\tif (isFitzpatrickModifier(nextPair))\n\t{\n\t\treturn 4\n\t}\n\treturn 2\n}\n\nexport function isFirstOfSurrogatePair(string: string)\n{\n\treturn string && betweenInclusive(string[0].charCodeAt(0), HIGH_SURROGATE_START, HIGH_SURROGATE_END)\n}\n\nexport function isRegionalIndicator(string: string)\n{\n\treturn betweenInclusive(codePointFromSurrogatePair(string), REGIONAL_INDICATOR_START, REGIONAL_INDICATOR_END)\n}\n\nexport function isFitzpatrickModifier(string: string)\n{\n\treturn betweenInclusive(codePointFromSurrogatePair(string), FITZPATRICK_MODIFIER_START, FITZPATRICK_MODIFIER_END)\n}\n\nexport function isVariationSelector(string: string)\n{\n\treturn typeof string === 'string' && betweenInclusive(string.charCodeAt(0), VARIATION_MODIFIER_START, VARIATION_MODIFIER_END)\n}\n\nexport function isDiacriticalMark(string: string)\n{\n\treturn typeof string === 'string' && betweenInclusive(string.charCodeAt(0), DIACRITICAL_MARKS_START, DIACRITICAL_MARKS_END)\n}\n\nexport function isGraphem(string: string)\n{\n\treturn typeof string === 'string' && GRAPHEMS.indexOf(string.charCodeAt(0)) !== -1\n}\n\nexport function isZeroWidthJoiner(string: string)\n{\n\treturn typeof string === 'string' && string.charCodeAt(0) === ZWJ\n}\n\nexport function codePointFromSurrogatePair(pair: string)\n{\n\tconst highOffset = pair.charCodeAt(0) - HIGH_SURROGATE_START\n\tconst lowOffset = pair.charCodeAt(1) - LOW_SURROGATE_START\n\treturn (highOffset << 10) + lowOffset + 0x10000\n}\n\nexport function betweenInclusive(value: number, lower: number, upper: number)\n{\n\treturn value >= lower && value <= upper\n}\n\nfunction _substring(string: string, start?: number, width?: number)\n{\n\tconst chars = _runes(string)\n\tif (start === undefined)\n\t{\n\t\treturn string\n\t}\n\tif (start >= chars.length)\n\t{\n\t\treturn ''\n\t}\n\tconst rest = chars.length - start\n\tconst stringWidth = width === undefined ? rest : width\n\tlet endIndex = start + stringWidth\n\tif (endIndex > (start + rest))\n\t{\n\t\tendIndex = undefined\n\t}\n\treturn chars.slice(start, endIndex).join('')\n}\n\nexport { _substring as substring }\nexport { _substring as substr }\n\n_runes.substr = _substring;\n_runes.substring = _substring;\n\n_runes.default = _runes;\n_runes.runes = _runes;\n\nObject.defineProperty(_runes, \"__esModule\", { value: true });\n\nexport { _runes as runes }\n\nexport default _runes\n"],"names":["GRAPHEMS","Object","freeze","string","result","increment","i","isGraphem","isZeroWidthJoiner","push","substring","nextUnits","current","isFirstOfSurrogatePair","length","currentPair","nextPair","isRegionalIndicator","betweenInclusive","codePointFromSurrogatePair","isFitzpatrickModifier","FITZPATRICK_MODIFIER_START","charCodeAt","isDiacriticalMark","value","lower","upper","_substring","start","chars","_runes","undefined"],"mappings":"0EAqBOA,EAAAC,OAAAC,OAAA,CACA,OAEA,OAEA,+DASN,OAEQ,OAER,OAEC,yBAEKC,MACD,iBAAAA,4DAOH,MAAAC,EAAA,WAIAC,EAAAA,EACA,KAAAC,EAAAA,8BAGAC,mBACAF,wBAIQF,EAAAG,EAAAD,KAETA,wBAEaC,EAAAD,KAEdA,IASKG,kBAAUL,EAAmCG,EAAAD,IAKlDA,KAMAD,EAAAK,KAAAN,EAAAO,UAAYJ,EAAAA,EAAZD,SAQCA,EAAA,GAUDD,OAAAA,EAGC,SAAAO,UAAAL,EAAAH,GACD,MAAAS,EAAAT,EAAAG,GACA,IAAAO,uBAAAD,IAAAN,IAAAH,EAAAW,OAAA,WAKD,MAAAC,EAAAH,EAAAT,EAAAG,EAAA,GAEA,IAAAU,EAAAb,EAAAO,UAAAJ,EAAA,EAAAA,EAAA,mFAGA,EAUC,EAKAO,SAAAA,uBAAAA,GAEKV,OAAAA,GAAAA,iBAAAA,EAAAA,GAAAA,WAAAA,gBAKA,SAAAc,oBAA2Bd,GAGhC,OAAAe,iBAAAC,2BAAAhB,GApJY,OACA,iBAuJYiB,sBAAAjB,UACekB,iBAAAA,2BAAAA,GApJ3B,OAGA,wCAuJZ,MAAA,iBAAAlB,GAAAe,iBAAAf,EAAAmB,WAAA,gBAKA,SAAAC,kBAAcpB,8DAtJF,KAGY,MAuJvB,SAAAI,UAAAJ,GACD,MACAA,iBAAAA,IADA,IACAA,EAAAA,QAAAA,EAAAA,WAAAA,IAEC,SAAAK,kBAAAL,SAEK,iBAAAA,GA3JM,OA2JNA,EAAAA,WAAAA,GAEN,uCAIA,8BAAY,4BAAgC,QAI7C,SAAAe,iBAAAM,EAAAC,EAAAC,GAJC,OAAAF,GAAAC,GAAAD,GAAAE,CAOD,CAGAC,SAAAA,WAAOxB,EAAeyB,EAAAA,GAEtB,MAAAC,EAAAC,OAAA3B,GALA,QAAA4B,IAAAH,EASA,wBAAA,MAAA,iRAnLyB,qCAHZ,sCANA,0CAHA,+JAJA,wCADA,+FAmBA"}