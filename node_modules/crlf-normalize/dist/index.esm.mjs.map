{"version":3,"file":"index.esm.mjs","sources":["../src/index.ts"],"sourcesContent":["import { ITSAndTypeAndStringLiteral, ITSTypeAndStringLiteral } from 'ts-type/lib/helper/string';\n\nexport const enum EnumLineBreak\n{\n\tCR = \"\\r\",\n\tCRLF = \"\\r\\n\",\n\tLF = \"\\n\",\n}\n\nconst CR = EnumLineBreak.CR as const;\nconst CRLF = EnumLineBreak.CRLF as const;\nconst LF = EnumLineBreak.LF as const;\n\nconst R_CRLF = /\\r\\n|\\r(?!\\n)|\\n/g;\n\nexport { CR, CRLF, LF, R_CRLF }\n\nexport type ILineBreak = ITSTypeAndStringLiteral<EnumLineBreak>;\n\nexport type ILineBreakInput = ITSAndTypeAndStringLiteral<EnumLineBreak>;\n\nexport interface IOptions\n{\n\tdisable?: {\n\t\tlf?: boolean,\n\t\tcrlf?: boolean,\n\t\tcr?: boolean,\n\t}\n}\n\nexport function crlf(text: string, newline: ILineBreakInput = EnumLineBreak.LF): string\n{\n\treturn text.replace(R_CRLF, newline);\n}\n\nexport function chkcrlf(text: string, options?: IOptions)\n{\n\tconst disable = options?.disable ?? {};\n\n\treturn {\n\t\tlf: !disable.lf && /\\n/.test(text.replace(/\\r\\n/g, '')),\n\t\tcrlf: !disable.crlf && /\\r\\n/.test(text),\n\t\tcr: !disable.cr && /\\r(?!\\n)/.test(text),\n\t} as const;\n}\n\nexport function detectLineBreak(text: string, options?: IOptions)\n{\n\tconst _lb = chkcrlf(text, options);\n\n\treturn _lb.crlf ? EnumLineBreak.CRLF : (_lb.lf || !_lb.cr) ? EnumLineBreak.LF : EnumLineBreak.CR\n}\n\nexport function isCRLF(newline: string): newline is EnumLineBreak.CRLF\n{\n\treturn newline === EnumLineBreak.CRLF\n}\n\nexport function isLF(newline: string): newline is EnumLineBreak.LF\n{\n\treturn newline === EnumLineBreak.LF\n}\n\nexport function isCR(newline: string): newline is EnumLineBreak.CR\n{\n\treturn newline === EnumLineBreak.CR\n}\n\nexport function lineSplit(text: string)\n{\n\treturn text.split(R_CRLF);\n}\n\nexport function crlf_unicode_normalize(text: string, newline: ILineBreakInput = EnumLineBreak.LF): string\n{\n\tconst ln3 = newline + newline + newline;\n\tconst ln2 = newline + newline;\n\n\treturn text\n\t\t.replace(/\\u000C/g, ln3)\n\t\t.replace(/\\u2028/g, newline)\n\t\t.replace(/\\u2029/g, ln2)\n\t\t;\n}\n\nexport default crlf;\n"],"names":["EnumLineBreak","CR","CRLF","LF","R_CRLF","crlf","text","newline","chkcrlf","options","_options$disable","disable","lf","test","replace","_lb","cr","isCRLF","isLF","lineSplit"],"mappings":";;;eAICA,EAMK,OAAA,QANLA,EAAA,KAAS;AAET,EAAAA,MAAAA,IAAA,CAAA;;AACAC,MAAAA,IAAAA,MAEKC,IAAAA,QALLC,IAMD,MAGMC,IAAN;;AAEO,SAAMC,KAAAC,GAAAC;SAsBCH,EAAAA,QAAAA,GAAAG;AAPd;;AAOiB,SAAAC,QAAAF,GAAAG;EAAA,IAAAC;EAJjB,MAACC,wEAAA;EAIgB,OAAA;WAuBmBC,MAAA,KAAAC,KAAAP,EAAAQ,QAAA,SAAA;IAG9BT,OAAAM,EAAcN,QAAgB,OAAAQ,KAAAP;;;AAKpC;;;EAGC,MAAAS,YAAAT,GAAAG;EAIA,OAAAM,EAAAV,OAAA,SAAAU,EAAAH,OAAAG,EAAAC,KAAA,OAAA;;;AAGAC,SAAAA,OAAWV;EACTA,OAAQ,WAARA;;;AAEA,SAAAW,KAAAX;EAbH,OAAA,SAAAA;AAiBA;;;;;;AAAA,SAAAY,UAAAb;;;;;;;;;"}